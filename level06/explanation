COMMAND: ls
RESUSLT: level06  level06.php

*php script explanation*


The script defines a function y($m) that takes a string $m as input and performs two replacements:

Replaces all occurrences of "." with " x ".
Replaces all occurrences of "@" with " y".
The modified string is then returned.
The script defines a function x($y, $z) that takes two parameters:

$y: The first parameter is expected to be a filename, as it uses file_get_contents($y) to read the contents of a file.
$z: The second parameter seems to be unused.
Inside the function:

It reads the content of the file specified by $y.
It uses a regular expression with the /e modifier to replace occurrences of a pattern \[x (.*)\] with the result of calling the y function on the captured content of the parentheses.
It replaces "[" with "(" and "]" with ")" in the modified content.
The resulting string is returned.
The script then calls the x function with two command-line arguments ($argv[1] and $argv[2]), and the result is stored in $r.

Finally, the script prints the value of $r.

When the /e modifier is used, the replacement string is treated as PHP code. This means that instead of a simple string replacement, the replacement string is evaluated as PHP code,
and the result of that evaluation is used as the replacement.

So we will make the script execute the getflag command.

COMMAND: echo '(x ${`getflag`})' > /tmp/file     *we write the [x (.*)] pattern so the /e mdifier is used
RESULT: 
PHP Notice:  Undefined variable: Check flag.Here is your token : *****flag*****
 in /home/user/level06/level06.php(4) : regexp code on line 1


